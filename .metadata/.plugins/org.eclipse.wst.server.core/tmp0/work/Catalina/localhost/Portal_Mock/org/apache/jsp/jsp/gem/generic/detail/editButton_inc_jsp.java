/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.34
 * Generated at: 2025-02-27 05:29:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.gem.generic.detail;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import org.iplass.mtp.entity.Entity;
import org.iplass.mtp.entity.definition.VersionControlType;
import org.iplass.mtp.util.StringUtil;
import org.iplass.mtp.view.generic.element.Button;
import org.iplass.mtp.view.generic.element.DisplayType;
import org.iplass.mtp.view.generic.DetailFormView;
import org.iplass.mtp.view.generic.EntityViewManager;
import org.iplass.mtp.view.generic.EntityViewUtil;
import org.iplass.mtp.view.generic.OutputType;
import org.iplass.mtp.web.template.TemplateUtil;
import org.iplass.mtp.ManagerLocator;
import org.iplass.gem.command.generic.delete.DeleteCommand;
import org.iplass.gem.command.generic.detail.DetailFormViewData;
import org.iplass.gem.command.generic.detail.InsertCommand;
import org.iplass.gem.command.generic.detail.UpdateCommand;
import org.iplass.gem.command.Constants;
import org.iplass.gem.command.GemResourceBundleUtil;
import org.iplass.gem.command.ViewUtil;

public final class editButton_inc_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;

static {
  _jspx_fnmap_0= org.apache.jasper.runtime.ProtectedFunctionMapper.getMapForFunction("m:rs", org.iplass.mtp.web.template.ELFunctions.class, "rs", new Class[] {java.lang.String.class, java.lang.String.class});
}

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/mtp.tld", Long.valueOf(1738207446000L));
    _jspx_dependants.put("/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar", Long.valueOf(1737625086258L));
    _jspx_dependants.put("jar:file:/C:/pleiades/2024-12/workspace/Portal_Mock/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Portal_Mock/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar!/META-INF/c.tld", Long.valueOf(1664421078000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(24);
    _jspx_imports_classes.add("org.iplass.mtp.entity.Entity");
    _jspx_imports_classes.add("org.iplass.mtp.view.generic.element.DisplayType");
    _jspx_imports_classes.add("org.iplass.gem.command.generic.detail.UpdateCommand");
    _jspx_imports_classes.add("org.iplass.mtp.view.generic.DetailFormView");
    _jspx_imports_classes.add("org.iplass.gem.command.generic.detail.InsertCommand");
    _jspx_imports_classes.add("org.iplass.gem.command.generic.detail.DetailFormViewData");
    _jspx_imports_classes.add("org.iplass.gem.command.generic.delete.DeleteCommand");
    _jspx_imports_classes.add("org.iplass.mtp.entity.definition.VersionControlType");
    _jspx_imports_classes.add("org.iplass.mtp.view.generic.EntityViewUtil");
    _jspx_imports_classes.add("org.iplass.gem.command.ViewUtil");
    _jspx_imports_classes.add("org.iplass.mtp.util.StringUtil");
    _jspx_imports_classes.add("org.iplass.mtp.view.generic.OutputType");
    _jspx_imports_classes.add("org.iplass.gem.command.GemResourceBundleUtil");
    _jspx_imports_classes.add("org.iplass.mtp.ManagerLocator");
    _jspx_imports_classes.add("org.iplass.gem.command.Constants");
    _jspx_imports_classes.add("org.iplass.mtp.web.template.TemplateUtil");
    _jspx_imports_classes.add("org.iplass.mtp.view.generic.element.Button");
    _jspx_imports_classes.add("org.iplass.mtp.view.generic.EntityViewManager");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPではGET、POST、またはHEADのみが許可されます。 JasperはOPTIONSも許可しています。");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


	DetailFormViewData data = (DetailFormViewData) request.getAttribute(Constants.DATA);

	DetailFormView form = data.getView();

	String defName = data.getEntityDefinition().getName();
	String viewName = form.getName();
	String execType = data.getExecType();

	//ビュー名があればアクションの後につける
	String urlPath = ViewUtil.getParamMappingPath(defName, viewName);

	//追加アクション
	String insert = "";
	if (StringUtil.isNotBlank(form.getInsertActionName())) {
		insert = form.getInsertActionName() + urlPath;
	} else {
		insert = InsertCommand.INSERT_ACTION_NAME + urlPath;
	}

	//更新アクション
	String update = "";
	if (StringUtil.isNotBlank(form.getUpdateActionName())) {
		update = form.getUpdateActionName() + urlPath;
	} else {
		update = UpdateCommand.UPDATE_ACTION_NAME + urlPath;
	}

	//削除アクション
	String delete = "";
	if (StringUtil.isNotBlank(form.getDeleteActionName())) {
		delete = form.getDeleteActionName() + urlPath;
	} else {
		delete = DeleteCommand.ACTION_NAME + urlPath;
	}

	EntityViewManager evm = ManagerLocator.getInstance().getManager(EntityViewManager.class);

      out.write("<ul class=\"list_operation edit-bar\">\n");

	if (form.getButtons().size() > 0) {
		for (Button button : form.getButtons()) {
			boolean isDisplayCustomType = false;
			if (button.getDisplayType() == DisplayType.CUSTOM) {
				isDisplayCustomType = evm.isDisplayButton(data.getEntityDefinition().getName(), button.getCustomDisplayTypeScriptKey(), OutputType.EDIT, data.getEntity());
			}
			Entity rootEntity = (Entity) request.getAttribute(Constants.ROOT_ENTITY);
			if (EntityViewUtil.isDisplayElement(defName, button.getElementRuntimeId(), OutputType.EDIT, rootEntity)
					&& (button.getDisplayType() == null || button.getDisplayType() == DisplayType.DETAIL
						|| button.getDisplayType() == DisplayType.BOTH || isDisplayCustomType)
					&& ViewUtil.dispElement(button)) {
				String cssClass = button.isPrimary() ? "gr-btn" : "gr-btn-02";
				if (StringUtil.isNotBlank(button.getStyle())) {
					cssClass = button.getStyle();
				}
				String customStyle = "";
				if (StringUtil.isNotBlank(button.getInputCustomStyle())) {
					Object value = request.getAttribute(Constants.ENTITY_DATA);
					Entity entity = value instanceof Entity ? (Entity) value : null;
					String scriptKey = (String)request.getAttribute(Constants.FORM_SCRIPT_KEY);
					customStyle = EntityViewUtil.getCustomStyle(defName, scriptKey, button.getInputCustomStyleScriptKey(), entity, null);
				}
				String buttonDisplayLabel = TemplateUtil.getMultilingualString(button.getDisplayLabel(), button.getLocalizedDisplayLabelList());

      out.write("<li class=\"btn\">\n");
      out.write("<input type=\"button\" class=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f0.setParent(null);
      // /jsp/gem/generic/detail/editButton.inc.jsp(109,28) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f0.setValue(cssClass );
      int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
      if (_jspx_th_c_005fout_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      out.write("\" value=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f1 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f1.setParent(null);
      // /jsp/gem/generic/detail/editButton.inc.jsp(109,68) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f1.setValue(buttonDisplayLabel );
      int _jspx_eval_c_005fout_005f1 = _jspx_th_c_005fout_005f1.doStartTag();
      if (_jspx_th_c_005fout_005f1.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
      out.write("\" \n");
      out.write("	style=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f2 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f2.setParent(null);
      // /jsp/gem/generic/detail/editButton.inc.jsp(110,8) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f2.setValue(customStyle );
      int _jspx_eval_c_005fout_005f2 = _jspx_th_c_005fout_005f2.doStartTag();
      if (_jspx_th_c_005fout_005f2.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f2);
      out.write("\" onclick=\"");
      out.print(button.getOnclickEvent() );
      out.write("\" />\n");
      out.write("</li>\n");

			}
		}
	}
	if (Constants.EXEC_TYPE_UPDATE.equals(execType)) {
		if (data.isCanUpdate()) {
			String updateDisplayLabel = GemResourceBundleUtil.resourceString("generic.detail.detailButton.save");
			String localizedUpdateDisplayLabel = TemplateUtil.getMultilingualString(form.getUpdateDisplayLabel(), form.getLocalizedUpdateDisplayLabelList());
			if (StringUtil.isNotBlank(localizedUpdateDisplayLabel)) {
				updateDisplayLabel = localizedUpdateDisplayLabel;
			}

      out.write("<li class=\"btn save-btn\">\n");
      out.write("<input type=\"button\" class=\"gr-btn disabled-btn\" value=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f3 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f3.setParent(null);
      // /jsp/gem/generic/detail/editButton.inc.jsp(125,56) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f3.setValue(updateDisplayLabel );
      int _jspx_eval_c_005fout_005f3 = _jspx_th_c_005fout_005f3.doStartTag();
      if (_jspx_th_c_005fout_005f3.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f3);
      out.write("\" \n");
      out.write("	disabled=\"disabled\" onclick=\"onclick_save('");
      out.print(StringUtil.escapeJavaScript(update) );
      out.write("', this)\" />\n");
      out.write("</li>\n");

		}
		if (data.isCanDelete() && !form.isHideDelete()) {
			String deleteDisplayLabel = GemResourceBundleUtil.resourceString("generic.detail.detailButton.delete");
			String localizedDeleteDisplayLabel = TemplateUtil.getMultilingualString(form.getDeleteDisplayLabel(), form.getLocalizedDeleteDisplayLabelList());
			if (StringUtil.isNotBlank(localizedDeleteDisplayLabel)) {
				deleteDisplayLabel = localizedDeleteDisplayLabel;
			}

      out.write("<li class=\"btn delete-btn\">\n");
      out.write("<input type=\"button\" class=\"gr-btn disabled-btn\" value=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f4 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f4.setParent(null);
      // /jsp/gem/generic/detail/editButton.inc.jsp(138,56) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f4.setValue(deleteDisplayLabel );
      int _jspx_eval_c_005fout_005f4 = _jspx_th_c_005fout_005f4.doStartTag();
      if (_jspx_th_c_005fout_005f4.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f4);
      out.write("\" \n");
      out.write("	disabled=\"disabled\" onclick=\"confirm_delete('");
      out.print(StringUtil.escapeJavaScript(delete) );
      out.write("', this)\" />\n");
      out.write("</li>\n");

		}
		if (data.getEntityDefinition().getVersionControlType() != VersionControlType.NONE
				&& data.isCanDelete() && form.isShowDeleteSpecificVersion()) {
			String displayLabel = GemResourceBundleUtil.resourceString("generic.detail.detailButton.deleteSpecificVersion");
			String localizedDisplayLabel = TemplateUtil.getMultilingualString(form.getDeleteSpecificVersionDisplayLabel(), form.getLocalizedDeleteSpecificVersionDisplayLabelList());
			if (StringUtil.isNotBlank(localizedDisplayLabel)) {
				displayLabel = localizedDisplayLabel;
			}

      out.write("<li class=\"btn delete-version-btn\">\n");
      out.write("<input type=\"button\" class=\"gr-btn disabled-btn\" value=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f5 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f5.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f5.setParent(null);
      // /jsp/gem/generic/detail/editButton.inc.jsp(152,56) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f5.setValue(displayLabel );
      int _jspx_eval_c_005fout_005f5 = _jspx_th_c_005fout_005f5.doStartTag();
      if (_jspx_th_c_005fout_005f5.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f5);
      out.write("\" \n");
      out.write("	disabled=\"disabled\" onclick=\"confirm_delete('");
      out.print(StringUtil.escapeJavaScript(delete) );
      out.write("', this, {'");
      out.print(DeleteCommand.DELETE_SPECIFIC_VERSION);
      out.write("':true})\" />\n");
      out.write("</li>\n");

		}
	} else {
		if (data.isCanCreate()) {
			String insertDisplayLabel = GemResourceBundleUtil.resourceString("generic.detail.detailButton.reg");
			String localizedInsertDisplayLabel = TemplateUtil.getMultilingualString(form.getInsertDisplayLabel(), form.getLocalizedInsertDisplayLabelList());
			if (StringUtil.isNotBlank(localizedInsertDisplayLabel)) {
				insertDisplayLabel = localizedInsertDisplayLabel;
			}

      out.write("<li class=\"btn insert-btn\">\n");
      out.write("<input type=\"button\" class=\"gr-btn disabled-btn\" value=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f6 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f6.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f6.setParent(null);
      // /jsp/gem/generic/detail/editButton.inc.jsp(166,56) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f6.setValue(insertDisplayLabel );
      int _jspx_eval_c_005fout_005f6 = _jspx_th_c_005fout_005f6.doStartTag();
      if (_jspx_th_c_005fout_005f6.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f6);
      out.write("\" \n");
      out.write("	disabled=\"disabled\" onclick=\"onclick_insert('");
      out.print(StringUtil.escapeJavaScript(insert) );
      out.write("', this)\" />\n");
      out.write("</li>\n");

		}
	}

      out.write("<li class=\"mt05 cancel-link\">\n");
      out.write("<a href=\"javascript:void(0)\" onclick=\"cancel();return false;\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${m:rs(\"mtp-gem-messages\", \"generic.detail.detailButton.cancel\")}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
      out.write("</a>\n");
      out.write("</li>\n");
      out.write("</ul>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
