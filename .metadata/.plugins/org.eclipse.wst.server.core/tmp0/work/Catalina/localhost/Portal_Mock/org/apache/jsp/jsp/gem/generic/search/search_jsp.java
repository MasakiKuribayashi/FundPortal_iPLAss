/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.34
 * Generated at: 2025-02-28 08:12:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.gem.generic.search;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import org.iplass.mtp.auth.AuthContext;
import org.iplass.mtp.entity.permission.EntityPermission;
import org.iplass.mtp.entity.definition.EntityDefinition;
import org.iplass.mtp.util.StringUtil;
import org.iplass.mtp.view.generic.element.section.Section;
import org.iplass.mtp.view.generic.element.Button;
import org.iplass.mtp.view.generic.EntityViewUtil;
import org.iplass.mtp.view.generic.OutputType;
import org.iplass.mtp.view.generic.SearchFormView;
import org.iplass.mtp.view.generic.ViewConst;
import org.iplass.mtp.web.template.TemplateUtil;
import org.iplass.gem.command.generic.detail.DetailViewCommand;
import org.iplass.gem.command.generic.search.SearchFormViewData;
import org.iplass.gem.command.generic.upload.EntityFileUploadIndexCommand;
import org.iplass.gem.command.Constants;
import org.iplass.gem.command.ViewUtil;

public final class search_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;

static {
  _jspx_fnmap_0= org.apache.jasper.runtime.ProtectedFunctionMapper.getMapForFunction("m:rs", org.iplass.mtp.web.template.ELFunctions.class, "rs", new Class[] {java.lang.String.class, java.lang.String.class});
}

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/mtp.tld", Long.valueOf(1740642050000L));
    _jspx_dependants.put("/jsp/gem/layout/resource/mediaelementResource.inc.jsp", Long.valueOf(1740642066000L));
    _jspx_dependants.put("/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar", Long.valueOf(1737625086258L));
    _jspx_dependants.put("jar:file:/C:/pleiades/2024-12/workspace/Portal_Mock/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Portal_Mock/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar!/META-INF/c.tld", Long.valueOf(1664421078000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(22);
    _jspx_imports_classes.add("org.iplass.mtp.view.generic.SearchFormView");
    _jspx_imports_classes.add("org.iplass.mtp.view.generic.EntityViewUtil");
    _jspx_imports_classes.add("org.iplass.gem.command.ViewUtil");
    _jspx_imports_classes.add("org.iplass.mtp.entity.permission.EntityPermission");
    _jspx_imports_classes.add("org.iplass.mtp.auth.AuthContext");
    _jspx_imports_classes.add("org.iplass.mtp.util.StringUtil");
    _jspx_imports_classes.add("org.iplass.mtp.view.generic.element.section.Section");
    _jspx_imports_classes.add("org.iplass.mtp.view.generic.OutputType");
    _jspx_imports_classes.add("org.iplass.mtp.view.generic.ViewConst");
    _jspx_imports_classes.add("org.iplass.mtp.entity.definition.EntityDefinition");
    _jspx_imports_classes.add("org.iplass.gem.command.Constants");
    _jspx_imports_classes.add("org.iplass.mtp.web.template.TemplateUtil");
    _jspx_imports_classes.add("org.iplass.mtp.view.generic.element.Button");
    _jspx_imports_classes.add("org.iplass.gem.command.generic.upload.EntityFileUploadIndexCommand");
    _jspx_imports_classes.add("org.iplass.gem.command.generic.detail.DetailViewCommand");
    _jspx_imports_classes.add("org.iplass.gem.command.generic.search.SearchFormViewData");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPではGET、POST、またはHEADのみが許可されます。 JasperはOPTIONSも許可しています。");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


	String contextPath = TemplateUtil.getTenantContextPath();

	SearchFormViewData data = (SearchFormViewData) request.getAttribute(Constants.DATA);
	EntityDefinition ed = data.getEntityDefinition();
	SearchFormView view = data.getView();

	String defName = ed.getName();
	String viewName = view.getName();

	boolean isHideNew = view.isHideNew();
	boolean isHideCsvUpload = view.getCondSection().isHideCsvUpload();

	//ビュー名があればアクションの後につける
	String urlPath = ViewUtil.getParamMappingPath(defName, viewName);

	//詳細表示アクション
	String detail = "";
	if (StringUtil.isNotBlank(view.getNewActionName())) {
		detail = view.getNewActionName() + urlPath;
	} else {
		detail = DetailViewCommand.DETAIL_ACTION_NAME + urlPath;
	}

	//CSVUploadアクション
	String csvUpload = "";
	if (StringUtil.isNotBlank(view.getViewUploadActionName())) {
		csvUpload = view.getViewUploadActionName() + urlPath;
	} else {
		csvUpload = EntityFileUploadIndexCommand.ACTION_NAME + urlPath;
	}

	//表示名
	String displayName = TemplateUtil.getMultilingualString(ed.getDisplayName(), ed.getLocalizedDisplayNameList());
	String viewTitle = TemplateUtil.getMultilingualString(view.getTitle(), view.getLocalizedTitleList());
	if(StringUtil.isNotBlank(viewTitle)) {
		displayName = viewTitle;
	}

	String imageColor = ViewUtil.getEntityImageColor(view);
	String imageColorStyle = "";
	if (imageColor != null) {
		imageColorStyle = "imgclr_" + imageColor;
	}

	String iconTag = ViewUtil.getIconTag(view);

	//数値のカンマ区切りのセパレータ
	String separator = ViewUtil.getGroupingSeparator();

	AuthContext auth = AuthContext.getCurrentContext();
	request.setAttribute(Constants.ENTITY_DEFINITION, ed);

	//権限チェック用に定義名をリクエストに保存
	request.setAttribute(Constants.DEF_NAME, defName);
	request.setAttribute(Constants.ROOT_DEF_NAME, defName);	//NestTableの場合にDEF_NAMEが置き換わるので別名でRootのDefNameをセット

	//editor以下で参照するパラメータ
	request.setAttribute(Constants.VIEW_NAME, viewName);

	String className = defName.replaceAll("\\.", "_");

      out.write("<div class=\"generic_search s_");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f0.setParent(null);
      // /jsp/gem/generic/search/search.jsp(103,29) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f0.setValue(className);
      int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
      if (_jspx_th_c_005fout_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      out.write("\">\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/webjars/jquery-blockui/2.70/jquery.blockUI.js?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/webjars/mediaelement/4.2.17/build/mediaelement-and-player.min.js?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/webjars/mediaelement/4.2.17/build/mediaelementplayer.min.css?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n");

	if (StringUtil.isNotBlank(view.getJavaScript())) {
		//View定義で設定されたJavaScript

      out.write("<script type=\"text/javascript\">\r\n");
      out.print(view.getJavaScript() );
      out.write("</script>\r\n");

	}

      out.write("<h2 class=\"hgroup-01\">\r\n");
      out.write("<span class=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f1 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f1.setParent(null);
      // /jsp/gem/generic/search/search.jsp(119,13) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f1.setValue(imageColorStyle);
      int _jspx_eval_c_005fout_005f1 = _jspx_th_c_005fout_005f1.doStartTag();
      if (_jspx_th_c_005fout_005f1.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
      out.write("\">\r\n");
if (StringUtil.isNotBlank(iconTag)) {
      out.print(iconTag);
} else {
      out.write("<i class=\"far fa-circle default-icon\"></i>\r\n");
} 
      out.write("</span>\r\n");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f2 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f2.setParent(null);
      // /jsp/gem/generic/search/search.jsp(126,0) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f2.setValue(displayName);
      int _jspx_eval_c_005fout_005f2 = _jspx_th_c_005fout_005f2.doStartTag();
      if (_jspx_th_c_005fout_005f2.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f2);
      out.write("</h2>\r\n");

	Section topSection1 = view.getTopSection1();
	if (topSection1 != null
			&& EntityViewUtil.isDisplayElement(defName, topSection1.getElementRuntimeId(), OutputType.SEARCHCONDITION, null)) {
		request.setAttribute(Constants.ELEMENT, topSection1);
		String topPath1 = EntityViewUtil.getJspPath(topSection1, ViewConst.DESIGN_TYPE_GEM);

      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, topPath1 , out, false);

	}

      out.write("<p class=\"btn\">\r\n");

	if (auth.checkPermission(new EntityPermission(defName, EntityPermission.Action.CREATE))) {
		if (!isHideNew) {

      out.write("<input class=\"gr-btn gr-size-01 mb10 gr-size-02\" type=\"button\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${m:rs('mtp-gem-messages', 'generic.search.search.newReg')}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
      out.write("\" onclick=\"createNewData('");
      out.print(StringUtil.escapeJavaScript(detail));
      out.write("', '");
      out.print(StringUtil.escapeJavaScript(defName));
      out.write("')\" />\r\n");

		}
		if (!isHideCsvUpload) {

      out.write("<input class=\"gr-btn gr-size-02 mb10\" type=\"button\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${m:rs('mtp-gem-messages', 'generic.search.search.csvUpBtn')}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
      out.write("\" onclick=\"csvupload()\" />\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("separator = \"");
      out.print( separator );
      out.write("\";\r\n");
      out.write("function csvupload(){\r\n");
      out.write("	var csvUpload = contextPath + \"/");
      out.print(StringUtil.escapeJavaScript(csvUpload));
      out.write("\";\r\n");
      out.write("	submitCsvupload(csvUpload);\r\n");
      out.write("}\r\n");
      out.write("function submitCsvupload(action) {\r\n");
      out.write("	var $form = $(\"<form method='post' />\").attr(\"action\", action).appendTo(\"body\");\r\n");
      out.write("	$(\"<input type='hidden' name='defName' />\").val(\"");
      out.print(StringUtil.escapeJavaScript(defName));
      out.write("\").appendTo($form);\r\n");
      out.write("	var searchCond = $(\":hidden[name='searchCond']\").val();\r\n");
      out.write("	$(\"<input type='hidden' name='searchCond' />\").val(searchCond).appendTo($form);\r\n");
      out.write("	$form.submit();\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");

		}
	}
	if (view.getButtons().size() > 0) {
		for (Button button : view.getButtons()) {
			if (EntityViewUtil.isDisplayElement(defName, button.getElementRuntimeId(), OutputType.SEARCHCONDITION, null)) {
				String cssClass = (button.isPrimary() ? "gr-btn" : "gr-btn-02") + " gr-size-02 mb10";
				if (StringUtil.isNotBlank(button.getStyle())) {
					cssClass = button.getStyle();
				}
				String customStyle = "";
				if (StringUtil.isNotBlank(button.getInputCustomStyle())) {
					//Entityを渡せないのでcssClass指定で足りる気がするがDetailに合わせる
					customStyle = EntityViewUtil.getCustomStyle(defName, view.getScriptKey(), button.getInputCustomStyleScriptKey(), null, null);
				}
				String displayLabel = TemplateUtil.getMultilingualString(button.getDisplayLabel(), button.getLocalizedDisplayLabelList());

      out.write("<input class=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f3 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f3.setParent(null);
      // /jsp/gem/generic/search/search.jsp(182,14) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f3.setValue(cssClass );
      int _jspx_eval_c_005fout_005f3 = _jspx_th_c_005fout_005f3.doStartTag();
      if (_jspx_th_c_005fout_005f3.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f3);
      out.write("\" style=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f4 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f4.setParent(null);
      // /jsp/gem/generic/search/search.jsp(182,54) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f4.setValue(customStyle );
      int _jspx_eval_c_005fout_005f4 = _jspx_th_c_005fout_005f4.doStartTag();
      if (_jspx_th_c_005fout_005f4.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f4);
      out.write("\" type=\"button\" value=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f5 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f5.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f5.setParent(null);
      // /jsp/gem/generic/search/search.jsp(182,111) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f5.setValue(displayLabel );
      int _jspx_eval_c_005fout_005f5 = _jspx_th_c_005fout_005f5.doStartTag();
      if (_jspx_th_c_005fout_005f5.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f5);
      out.write("\" onclick=\"");
      out.print(button.getOnclickEvent() );
      out.write("\" />\r\n");

			}
		}
	}

      out.write("</p>\r\n");

	Section topSection2 = view.getTopSection2();
	if (topSection2 != null
			&& EntityViewUtil.isDisplayElement(defName, topSection2.getElementRuntimeId(), OutputType.SEARCHCONDITION, null)) {
		request.setAttribute(Constants.ELEMENT, topSection2);
		String topPath2 = EntityViewUtil.getJspPath(topSection2, ViewConst.DESIGN_TYPE_GEM);

      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, topPath2 , out, false);

	}

	//検索条件
	Section condition = view.getCondSection();
	String path = EntityViewUtil.getJspPath(condition, ViewConst.DESIGN_TYPE_GEM);
	if (path != null) {
		request.setAttribute(Constants.OUTPUT_TYPE, OutputType.SEARCHCONDITION);

      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, path, out, false);

		request.removeAttribute(Constants.OUTPUT_TYPE);
	}

	Section centerSection = view.getCenterSection();
	if (centerSection != null
			&& EntityViewUtil.isDisplayElement(defName, centerSection.getElementRuntimeId(), OutputType.SEARCHCONDITION, null)) {
		request.setAttribute(Constants.ELEMENT, centerSection);
		String centerPath = EntityViewUtil.getJspPath(centerSection, ViewConst.DESIGN_TYPE_GEM);

      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, centerPath , out, false);

	}

	//検索結果
	Section result = view.getResultSection();
	path  = EntityViewUtil.getJspPath(result, ViewConst.DESIGN_TYPE_GEM);
	if (path != null) {
		request.setAttribute(Constants.OUTPUT_TYPE, OutputType.SEARCHRESULT);

      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, path, out, false);

		request.removeAttribute(Constants.OUTPUT_TYPE);
	}

	Section bottomSection = view.getBottomSection();
	if (bottomSection != null
			&& EntityViewUtil.isDisplayElement(defName, bottomSection.getElementRuntimeId(), OutputType.SEARCHCONDITION, null)) {
		request.setAttribute(Constants.ELEMENT, bottomSection);
		String bottomPath = EntityViewUtil.getJspPath(bottomSection, ViewConst.DESIGN_TYPE_GEM);

      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, bottomPath , out, false);

	}

      out.write("</div>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
