/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.34
 * Generated at: 2025-02-27 05:29:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.gem.generic.editor.timestamp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.sql.Timestamp;
import java.text.*;
import java.util.Date;
import org.iplass.mtp.auth.AuthContext;
import org.iplass.mtp.entity.permission.EntityPropertyPermission;
import org.iplass.mtp.entity.Entity;
import org.iplass.mtp.entity.ValidateError;
import org.iplass.mtp.entity.definition.PropertyDefinition;
import org.iplass.mtp.util.DateUtil;
import org.iplass.mtp.util.StringUtil;
import org.iplass.mtp.view.generic.EntityViewUtil;
import org.iplass.mtp.view.generic.editor.DateTimePropertyEditor.DateTimeDisplayType;
import org.iplass.mtp.view.generic.editor.DateTimePropertyEditor.MinIntereval;
import org.iplass.mtp.view.generic.editor.DateTimePropertyEditor.TimeDispRange;
import org.iplass.mtp.view.generic.editor.TimestampPropertyEditor;
import org.iplass.mtp.web.template.TemplateUtil;
import org.iplass.gem.command.Constants;
import org.iplass.gem.command.ViewUtil;

public final class TimestampPropertyEditor_005fEdit_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {


	Object getDefaultValue(TimestampPropertyEditor editor, PropertyDefinition pd) {
		String defaultValue = editor.getDefaultValue();
		if (defaultValue != null) {
			if (pd.getMultiplicity() != 1) {
				String[] vals = defaultValue.split(",");
				int length = vals.length > pd.getMultiplicity() ? pd.getMultiplicity() : vals.length;
				Timestamp[] ret = new Timestamp[length];
				for (int i = 0; i < length; i++) {
					ret[i] = getDefaultValue(vals[i]);
				}
				return ret;
			} else {
				return getDefaultValue(defaultValue);
			}
		}
		return null;
	}
	Timestamp getDefaultValue(String value) {
		if (value != null) {
			if ("NOW".equals(value)) {
				//TODO 予約語の検討、X日後とか特定日付からの加減も必要？
				return new Timestamp(TemplateUtil.getCurrentTimestamp().getTime());
			} else {
				try {
					SimpleDateFormat format = DateUtil.getSimpleDateFormat(TemplateUtil.getLocaleFormat().getServerDateTimeFormat(), true);
					Long l = format.parse(value + "000").getTime();
					return new Timestamp(l);
				} catch (ParseException e) {
				}
			}
		}
		return null;
	}
	boolean checkError(String propName) {
		ValidateError[] errors = (ValidateError[]) TemplateUtil.getRequestContext().getAttribute(Constants.ERROR_PROP);
		if (errors != null) {
			for (ValidateError tmp : errors) {
				if (propName.equals(tmp.getPropertyName())) {
					return true;
				}
			}
		}
		return false;
	}
	/**
	 * 文字列をサニタイズする
	 *
	 * @param value 対象文字列
	 * @return サニタイズ後の文字列
	 */
	String sanitize(String value) {
		return StringUtil.escapeHtml(StringUtil.escapeJavaScript(value));
	}
	/**
	 * ノードに設定する属性キー・バリューを取得する。
	 * バリューの値はサニタイズする。
	 *
	 * @param key 属性キー
	 * @param configValue 設定値
	 * @return 属性文字列 （${key}="${configValue}"）。設定値が空の場合は空文字を返却。
	 */
	String getAttribute(String key, String configValue) {
		if (null == configValue || "".equals(configValue)) {
			return "";
		}
		return key + "=\"" + sanitize(configValue) + "\"";
	}
	/**
	 * 入力フィールドの属性情報を取得する。
	 * 設定対象の属性値は以下の通り。
	 * <ul>
	 * <li>リスト説明 ⇒ 属性キー: 属性値の内容説明
	 * <li>data-min-date: TimestampPropertyEditor#getMinDate() の設定値</li>
	 * <li>data-min-date-function: TimestampPropertyEditor#isMinDateFunction() で判断。 data-min-date の値が function として実行される場合 true が設定される</li>
	 * <li>data-max-date: TimestampPropertyEditor#getMaxDate() の設定値</li>
	 * <li>data-max-date-function: TimestampPropertyEditor#isMaxDateFunction() で判断。data-max-date の値が function として実行される場合 true が設定される</li>
	 * <li>readonly: TimestampPropertyEditor#isRestrictDirectEditing() が true の場合にキーを指定</li>
	 * </ul>
	 *
	 * @param editor TimestampPropertyEditor インスタンス
	 * @return 入力フィールドの属性情報
	 */
	String getInputAttrs(TimestampPropertyEditor editor) {
		StringBuilder attrs = new StringBuilder("");
		attrs
			// getMinDate() で設定が存在していれば data-min-date 属性を設定する
			.append(getAttribute("data-min-date", editor.getMinDate()))
			.append(" ")
			// isMinDateFunction が true の場合は、 data-min-date-function="true" を付与する
			.append(editor.isMinDateFunction() ? "data-min-date-function=\"true\"" : "")
			.append(" ")
			// getMaxDate() で設定が存在していれば data-max-date 属性を設定する
			.append(getAttribute("data-max-date", editor.getMaxDate()))
			.append(" ")
			// isMaxDateFunction が true の場合は、 data-max-date-function="true" を付与する
			.append(editor.isMaxDateFunction() ? "data-max-date-function=\"true\"" : "")
			.append(" ")
			// isRestrictDirectEditing が true の場合は、 readonly 属性を付与する
			.append(editor.isRestrictDirectEditing() ? "readonly" : "");
		return attrs.toString();
	}

private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;

static {
  _jspx_fnmap_0= org.apache.jasper.runtime.ProtectedFunctionMapper.getMapForFunction("m:rs", org.iplass.mtp.web.template.ELFunctions.class, "rs", new Class[] {java.lang.String.class, java.lang.String.class});
}

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/mtp.tld", Long.valueOf(1738207446000L));
    _jspx_dependants.put("/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar", Long.valueOf(1737625086258L));
    _jspx_dependants.put("jar:file:/C:/pleiades/2024-12/workspace/Portal_Mock/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Portal_Mock/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar!/META-INF/c.tld", Long.valueOf(1664421078000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(23);
    _jspx_imports_classes.add("org.iplass.mtp.entity.Entity");
    _jspx_imports_classes.add("org.iplass.mtp.view.generic.editor.TimestampPropertyEditor");
    _jspx_imports_classes.add("java.util.Date");
    _jspx_imports_classes.add("org.iplass.mtp.entity.definition.PropertyDefinition");
    _jspx_imports_classes.add("java.sql.Timestamp");
    _jspx_imports_classes.add("org.iplass.mtp.view.generic.EntityViewUtil");
    _jspx_imports_classes.add("org.iplass.gem.command.ViewUtil");
    _jspx_imports_classes.add("org.iplass.mtp.view.generic.editor.DateTimePropertyEditor.DateTimeDisplayType");
    _jspx_imports_classes.add("org.iplass.mtp.auth.AuthContext");
    _jspx_imports_classes.add("org.iplass.mtp.entity.permission.EntityPropertyPermission");
    _jspx_imports_classes.add("org.iplass.mtp.util.StringUtil");
    _jspx_imports_classes.add("org.iplass.mtp.view.generic.editor.DateTimePropertyEditor.MinIntereval");
    _jspx_imports_classes.add("org.iplass.gem.command.Constants");
    _jspx_imports_classes.add("org.iplass.mtp.web.template.TemplateUtil");
    _jspx_imports_classes.add("org.iplass.mtp.view.generic.editor.DateTimePropertyEditor.TimeDispRange");
    _jspx_imports_classes.add("org.iplass.mtp.util.DateUtil");
    _jspx_imports_classes.add("org.iplass.mtp.entity.ValidateError");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPではGET、POST、またはHEADのみが許可されます。 JasperはOPTIONSも許可しています。");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


	TimestampPropertyEditor editor = (TimestampPropertyEditor) request.getAttribute(Constants.EDITOR_EDITOR);

	Entity entity = request.getAttribute(Constants.ENTITY_DATA) instanceof Entity ? (Entity) request.getAttribute(Constants.ENTITY_DATA) : null;
	Object propValue = request.getAttribute(Constants.EDITOR_PROP_VALUE);
	String displayLabel = (String) request.getAttribute(Constants.EDITOR_DISPLAY_LABEL);

	String defName = (String)request.getAttribute(Constants.DEF_NAME);
	String rootDefName = (String)request.getAttribute(Constants.ROOT_DEF_NAME);
	PropertyDefinition pd = (PropertyDefinition) request.getAttribute(Constants.EDITOR_PROPERTY_DEFINITION);
	String scriptKey = (String)request.getAttribute(Constants.SECTION_SCRIPT_KEY);
	String execType = (String) request.getAttribute(Constants.EXEC_TYPE);
	Boolean nestDummyRow = (Boolean) request.getAttribute(Constants.EDITOR_REF_NEST_DUMMY_ROW);
	if (nestDummyRow == null) {
		nestDummyRow = false;
	}

	Boolean isVirtual = (Boolean) request.getAttribute(Constants.IS_VIRTUAL);
	if (isVirtual == null) isVirtual = false;

	boolean isInsert = Constants.EXEC_TYPE_INSERT.equals(execType);
	String propName = editor.getPropertyName();
	AuthContext auth = AuthContext.getCurrentContext();

    boolean isUserDateTimePicker = editor.isUseDatetimePicker();

    if (TimeDispRange.NONE.equals(editor.getDispRange())) {
    	isUserDateTimePicker = false;
    }

	boolean isEditable = true;
	if (isVirtual) {
		isEditable = true;//仮想プロパティは権限チェック要らない
	} else {
		if(isInsert) {
			isEditable = auth.checkPermission(new EntityPropertyPermission(defName, pd.getName(), EntityPropertyPermission.Action.CREATE));
		} else {
			isEditable = auth.checkPermission(new EntityPropertyPermission(defName, pd.getName(), EntityPropertyPermission.Action.UPDATE));
		}
	}
	boolean updatable = ((pd == null || pd.isUpdatable()) || isInsert) && isEditable;
	if (propValue == null) {
		//表示するパラメータがない場合は別の所から補完
		if (checkError(propName)) {
			//更新時のTimestampへの変換でエラーが出た場合、文字列で取り出して再表示する
			if (pd.getMultiplicity() == 1) {
				propValue = request.getParameter(propName);
			} else {
				propValue = request.getParameterValues(propName);
			}
		} else {
			//新規追加で更新可能な項目ならデフォルト値を設定
			if (isInsert && isEditable) propValue = getDefaultValue(editor, pd);
		}
	}

	if (ViewUtil.isAutocompletionTarget()) {
		request.setAttribute(Constants.AUTOCOMPLETION_EDITOR, editor);
		request.setAttribute(Constants.AUTOCOMPLETION_SCRIPT_PATH, "/jsp/gem/generic/editor/timestamp/TimestampPropertyAutocompletion.jsp");
	}

	// 入力フィールドの属性値を取得する
	String inputAttributes = getInputAttrs(editor);

	//タイプ毎に出力内容かえる
	if (editor.getDisplayType() != DateTimeDisplayType.LABEL
			&& editor.getDisplayType() != DateTimeDisplayType.HIDDEN && updatable) {

		boolean isMultiple = pd.getMultiplicity() != 1;

		//カスタムスタイル
		String customStyle = "";
		if (StringUtil.isNotEmpty(editor.getInputCustomStyle())) {
			customStyle = EntityViewUtil.getCustomStyle(rootDefName, scriptKey, editor.getInputCustomStyleScriptKey(), entity, propValue);
		}

		if (isMultiple) {
			//複数
			String ulId = "ul_" + propName;
			int length = 0;
			String dummyRowId = "id_li_" + propName + "Dummmy";
			String toggleAddBtnFunc = "toggleAddBtn_" + StringUtil.escapeJavaScript(propName);


      out.write("<script type=\"text/javascript\">\n");
      out.write("function ");
      out.print(toggleAddBtnFunc);
      out.write("(){\n");
      out.write("	var display = $(\"#");
      out.print(StringUtil.escapeJavaScript(ulId));
      out.write(" li:not(:hidden)\").length < ");
      out.print(pd.getMultiplicity());
      out.write(";\n");
      out.write("	$(\"#id_addBtn_");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f0.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(233,15) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f0.setValue(propName );
      int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
      if (_jspx_th_c_005fout_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      out.write("\").toggle(display);\n");
      out.write("\n");
      out.write("	var $parent = $(\"#");
      out.print(StringUtil.escapeJavaScript(ulId));
      out.write("\").closest(\".property-data\");\n");
      out.write("	if ($(\".validate-error\", $parent).length === 0) {\n");
      out.write("		$(\".format-error\", $parent).remove();\n");
      out.write("	}\n");
      out.write("}\n");
      out.write("</script>\n");

			// DatetimePicker
			if (isUserDateTimePicker) {


      out.write("<ul id=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f1 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f1.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(246,8) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f1.setValue(ulId );
      int _jspx_eval_c_005fout_005f1 = _jspx_th_c_005fout_005f1.doStartTag();
      if (_jspx_th_c_005fout_005f1.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f1);
      out.write("\" class=\"mb05\">\n");
      out.write("<li id=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f2 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f2.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f2.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(247,8) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f2.setValue(dummyRowId );
      int _jspx_eval_c_005fout_005f2 = _jspx_th_c_005fout_005f2.doStartTag();
      if (_jspx_th_c_005fout_005f2.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f2);
      out.write("\" class=\"list-add picker-list timestamppicker-field\" style=\"display: none;\">\n");


				StringBuffer sbFormat = new StringBuffer();
			    String defaultHour = "00";

				if (TimeDispRange.isDispHour(editor.getDispRange())) {
					sbFormat.append("HH");
					defaultHour = "";
				}

				String defaultMin = "00";
				int minInterval = MinIntereval.toInt(editor.getInterval());
				if (TimeDispRange.isDispMin(editor.getDispRange())) {
					sbFormat.append(":mm");
			    	defaultMin = "";
				}
				String defaultSec = "00";
				if (TimeDispRange.isDispSec(editor.getDispRange())) {
					sbFormat.append(":ss");
					defaultSec = "";
				}


      out.write("<input type=\"text\" class=\"inpbr\" style=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f3 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f3.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f3.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(271,40) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f3.setValue(customStyle);
      int _jspx_eval_c_005fout_005f3 = _jspx_th_c_005fout_005f3.doStartTag();
      if (_jspx_th_c_005fout_005f3.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f3);
      out.write("\" data-showWeekday=");
      out.print(editor.isShowWeekday());
      out.write(" data-suppress-alert=\"true\"\n");
      out.write("	data-stepmin=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f4 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f4.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f4.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(272,15) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f4.setValue(minInterval );
      int _jspx_eval_c_005fout_005f4 = _jspx_th_c_005fout_005f4.doStartTag();
      if (_jspx_th_c_005fout_005f4.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f4);
      out.write("\" data-timeformat=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f5 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f5.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f5.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(272,68) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f5.setValue(sbFormat.toString() );
      int _jspx_eval_c_005fout_005f5 = _jspx_th_c_005fout_005f5.doStartTag();
      if (_jspx_th_c_005fout_005f5.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f5);
      out.write("\"\n");
      out.write("	data-fixedMin=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f6 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f6.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f6.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(273,16) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f6.setValue(defaultMin);
      int _jspx_eval_c_005fout_005f6 = _jspx_th_c_005fout_005f6.doStartTag();
      if (_jspx_th_c_005fout_005f6.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f6);
      out.write("\" data-fixedSec=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f7 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f7.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f7.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(273,65) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f7.setValue(defaultSec);
      int _jspx_eval_c_005fout_005f7 = _jspx_th_c_005fout_005f7.doStartTag();
      if (_jspx_th_c_005fout_005f7.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f7);
      out.write("\" data-fixedMSec=\"000\"\n");
      out.write("	");
      out.print( inputAttributes );
      out.write(" />\n");
      out.write("<input type=\"hidden\" />\n");
      out.write("<input type=\"button\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${m:rs('mtp-gem-messages', 'generic.editor.timestamp.TimestampPropertyEditor_Edit.delete')}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
      out.write("\" class=\"gr-btn-02 del-btn\" />\n");
      out.write("</li>\n");

				Object[] array = propValue instanceof Object[] ? (Object[]) propValue : null;
				if (array != null) {
					length = array.length;
					for (int i = 0; i < array.length; i++) {
						String liId = "li_" + propName + i;

      out.write("<li id=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f8 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f8.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f8.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(285,8) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f8.setValue(liId );
      int _jspx_eval_c_005fout_005f8 = _jspx_th_c_005fout_005f8.doStartTag();
      if (_jspx_th_c_005fout_005f8.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f8);
      out.write("\" class=\"list-add picker-list timestamppicker-field\">\n");

						request.setAttribute(Constants.EDITOR_PICKER_PROP_NAME, propName + i);
						request.setAttribute(Constants.EDITOR_PICKER_PROP_VALUE, array[i]);

      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "TimestampTimepicker.jsp", out, false);

						request.removeAttribute(Constants.EDITOR_PICKER_PROP_NAME);
						request.removeAttribute(Constants.EDITOR_PICKER_PROP_VALUE);

      out.write("<input type=\"button\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${m:rs('mtp-gem-messages', 'generic.editor.timestamp.TimestampPropertyEditor_Edit.delete')}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
      out.write("\" class=\"gr-btn-02 del-btn\"\n");
      out.write("	onclick=\"deleteItem('");
      out.print(StringUtil.escapeJavaScript(liId));
      out.write('\'');
      out.write(',');
      out.write(' ');
      out.print(toggleAddBtnFunc);
      out.write(")\" />\n");
      out.write("</li>\n");

					}
				}
				String addBtnStyle = "";
				if (array != null && array.length >= pd.getMultiplicity()) addBtnStyle = "display: none;";

      out.write("</ul>\n");
      out.write("<input type=\"button\" id=\"id_addBtn_");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f9 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f9.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f9.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(305,35) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f9.setValue(propName );
      int _jspx_eval_c_005fout_005f9 = _jspx_th_c_005fout_005f9.doStartTag();
      if (_jspx_th_c_005fout_005f9.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f9);
      out.write("\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${m:rs('mtp-gem-messages', 'generic.editor.timestamp.TimestampPropertyEditor_Edit.add')}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
      out.write("\" class=\"gr-btn-02 add-btn\" style=\"");
      out.print(addBtnStyle);
      out.write("\"\n");
      out.write("	onclick=\"addTimestampPickerItem('");
      out.print(StringUtil.escapeJavaScript(ulId));
      out.write('\'');
      out.write(',');
      out.write(' ');
      out.print(pd.getMultiplicity() + 1 );
      out.write(',');
      out.write(' ');
      out.write('\'');
      out.print(StringUtil.escapeJavaScript(dummyRowId));
      out.write("', '");
      out.print(StringUtil.escapeJavaScript(propName));
      out.write("', 'id_count_");
      out.print(StringUtil.escapeJavaScript(propName));
      out.write('\'');
      out.write(',');
      out.write(' ');
      out.print(toggleAddBtnFunc);
      out.write(',');
      out.write(' ');
      out.print(toggleAddBtnFunc);
      out.write(")\" />\n");
      out.write("<input type=\"hidden\" id=\"id_count_");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f10 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f10.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f10.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(307,34) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f10.setValue(propName );
      int _jspx_eval_c_005fout_005f10 = _jspx_th_c_005fout_005f10.doStartTag();
      if (_jspx_th_c_005fout_005f10.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f10);
      out.write("\" value=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f11 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f11.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f11.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(307,74) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f11.setValue(length );
      int _jspx_eval_c_005fout_005f11 = _jspx_th_c_005fout_005f11.doStartTag();
      if (_jspx_th_c_005fout_005f11.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f11);
      out.write("\" />\n");
      out.write("<script>\n");
      out.write("$(function() {\n");
      out.write("	");
      out.write("\n");
      out.write("	addEditValidator(function() {\n");
      out.write("		var $input = $(\"#\" + es(\"");
      out.print(ulId);
      out.write("\") + \" li :text\");\n");
      out.write("		for (var i = 0; i < $input.length; i++) {\n");
      out.write("			var $_input = $($input.get(i));\n");
      out.write("			var val = $_input.val();\n");
      out.write("			var dateFormat = dateUtil.getInputDateFormat();\n");
      out.write("			var timeFormat = $_input.attr(\"data-timeformat\");\n");
      out.write("			var fixedmin = $_input.attr(\"data-fixedmin\");\n");
      out.write("			var fixedsec = $_input.attr(\"data-fixedsec\");\n");
      out.write("			if (typeof val !== \"undefined\" && val !== null && val !== \"\") {\n");
      out.write("				try {\n");
      out.write("					validateTimestampPicker(val, dateFormat, timeFormat, fixedmin, fixedsec);\n");
      out.write("				} catch (e) {\n");
      out.write("					alert(messageFormat(scriptContext.gem.locale.common.timestampFormatErrorMsg, \"");
      out.print(StringUtil.escapeJavaScript(displayLabel));
      out.write("\", dateFormat + \" \" + timeFormat))\n");
      out.write("					return false;\n");
      out.write("				}\n");
      out.write("			}\n");
      out.write("		}\n");
      out.write("		return true;\n");
      out.write("	});\n");
      out.write("});\n");
      out.write("</script>\n");
      out.write("\n");

			} else {

      out.write("<ul id=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f12 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f12.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f12.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(337,8) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f12.setValue(ulId );
      int _jspx_eval_c_005fout_005f12 = _jspx_th_c_005fout_005f12.doStartTag();
      if (_jspx_th_c_005fout_005f12.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f12);
      out.write("\" class=\"mb05\">\n");
      out.write("<li id=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f13 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f13.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f13.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(338,8) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f13.setValue(dummyRowId );
      int _jspx_eval_c_005fout_005f13 = _jspx_th_c_005fout_005f13.doStartTag();
      if (_jspx_th_c_005fout_005f13.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f13);
      out.write("\" class=\"list-add picker-list timestampselect-field\" style=\"display: none;\">\n");
      out.write("<input type=\"text\" class=\"inpbr\" style=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f14 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f14.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f14.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(339,40) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f14.setValue(customStyle);
      int _jspx_eval_c_005fout_005f14 = _jspx_th_c_005fout_005f14.doStartTag();
      if (_jspx_th_c_005fout_005f14.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f14);
      out.write("\" data-showButtonPanel=\"");
      out.print(!editor.isHideButtonPanel());
      out.write("\" data-showWeekday=");
      out.print(editor.isShowWeekday());
      out.write(" data-suppress-alert=\"true\" ");
      out.print( inputAttributes );
      out.write(" />\n");

				if (TimeDispRange.isDispHour(editor.getDispRange())) {
				//時間を表示

      out.write("<label>\n");
      out.write("<select class=\"inpbr form-size-11\" style=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f15 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f15.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f15.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(345,42) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f15.setValue(customStyle);
      int _jspx_eval_c_005fout_005f15 = _jspx_th_c_005fout_005f15.doStartTag();
      if (_jspx_th_c_005fout_005f15.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f15);
      out.write("\" data-defaultValue=\"00\">\n");
      out.write("<option value=\"  \">--</option>\n");

					for (int j = 0; j < 24; j++) {
						String h = String.format("%02d", j);

      out.write("<option value=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f16 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f16.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f16.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(351,15) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f16.setValue(h);
      int _jspx_eval_c_005fout_005f16 = _jspx_th_c_005fout_005f16.doStartTag();
      if (_jspx_th_c_005fout_005f16.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f16);
      out.write('"');
      out.write('>');
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f17 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f17.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f17.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(351,40) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f17.setValue(h);
      int _jspx_eval_c_005fout_005f17 = _jspx_th_c_005fout_005f17.doStartTag();
      if (_jspx_th_c_005fout_005f17.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f17);
      out.write("</option>\n");

					}

      out.write("</select>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${m:rs(\"mtp-gem-messages\", \"generic.editor.timestamp.TimestampPropertyEditor_Edit.hour\")}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
      out.write("</label>\n");

				} else {

      out.write("<input type=\"hidden\" value=\"00\" />\n");

				}
				int minInterval = MinIntereval.toInt(editor.getInterval());
				if (TimeDispRange.isDispMin(editor.getDispRange())) {
					//分を表示

      out.write("<label>\n");
      out.write("<select class=\"inpbr form-size-11\" style=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f18 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f18.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f18.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(368,42) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f18.setValue(customStyle);
      int _jspx_eval_c_005fout_005f18 = _jspx_th_c_005fout_005f18.doStartTag();
      if (_jspx_th_c_005fout_005f18.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f18);
      out.write("\" data-defaultValue=\"00\">\n");
      out.write("<option value=\"  \">--</option>\n");

					for (int j = 0; j < 60; j += minInterval) {
						String m = String.format("%02d", j);

      out.write("<option value=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f19 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f19.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f19.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(374,15) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f19.setValue(m );
      int _jspx_eval_c_005fout_005f19 = _jspx_th_c_005fout_005f19.doStartTag();
      if (_jspx_th_c_005fout_005f19.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f19);
      out.write('"');
      out.write('>');
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f20 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f20.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f20.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(374,41) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f20.setValue(m );
      int _jspx_eval_c_005fout_005f20 = _jspx_th_c_005fout_005f20.doStartTag();
      if (_jspx_th_c_005fout_005f20.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f20);
      out.write("</option>\n");

					}

      out.write("</select>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${m:rs(\"mtp-gem-messages\", \"generic.editor.timestamp.TimestampPropertyEditor_Edit.minute\")}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
      out.write("</label>\n");

				} else {

      out.write("<input type=\"hidden\" value=\"00\" />\n");

				}
				if (TimeDispRange.isDispSec(editor.getDispRange())) {
					//秒を表示

      out.write("<label>\n");
      out.write("<select class=\"inpbr form-size-11\" style=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f21 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f21.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f21.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(390,42) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f21.setValue(customStyle);
      int _jspx_eval_c_005fout_005f21 = _jspx_th_c_005fout_005f21.doStartTag();
      if (_jspx_th_c_005fout_005f21.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f21);
      out.write("\" data-defaultValue=\"00\">\n");
      out.write("<option value=\"  \">--</option>\n");

					for (int j = 0; j < 60; j++) {
						String s = String.format("%02d", j);

      out.write("<option value=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f22 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f22.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f22.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(396,15) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f22.setValue(s );
      int _jspx_eval_c_005fout_005f22 = _jspx_th_c_005fout_005f22.doStartTag();
      if (_jspx_th_c_005fout_005f22.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f22);
      out.write('"');
      out.write('>');
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f23 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f23.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f23.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(396,41) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f23.setValue(s );
      int _jspx_eval_c_005fout_005f23 = _jspx_th_c_005fout_005f23.doStartTag();
      if (_jspx_th_c_005fout_005f23.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f23);
      out.write("</option>\n");

					}

      out.write("</select>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${m:rs(\"mtp-gem-messages\", \"generic.editor.timestamp.TimestampPropertyEditor_Edit.second\")}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
      out.write("</label>\n");

				} else {

      out.write("<input type=\"hidden\" value=\"00\" />\n");

				}

      out.write("<input type=\"hidden\" value=\"000\" />\n");
      out.write("<input type=\"hidden\" />\n");
      out.write("<input type=\"button\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${m:rs('mtp-gem-messages', 'generic.editor.timestamp.TimestampPropertyEditor_Edit.delete')}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
      out.write("\" class=\"gr-btn-02 del-btn\" />\n");
      out.write("</li>\n");

				Object[] array = propValue instanceof Object[] ? (Object[]) propValue : null;
				if (array != null) {
					length = array.length;
					for (int i = 0; i < array.length; i++) {
						String liId = "li_" + propName + i;

      out.write("<li id=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f24 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f24.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f24.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(420,8) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f24.setValue(liId );
      int _jspx_eval_c_005fout_005f24 = _jspx_th_c_005fout_005f24.doStartTag();
      if (_jspx_th_c_005fout_005f24.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f24);
      out.write("\" class=\"list-add picker-list timestampselect-field\">\n");

						request.setAttribute(Constants.EDITOR_PICKER_PROP_NAME, propName + i);
						request.setAttribute(Constants.EDITOR_PICKER_PROP_VALUE, array[i]);
	
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Timestamp.jsp", out, false);

						request.removeAttribute(Constants.EDITOR_PICKER_PROP_NAME);
						request.removeAttribute(Constants.EDITOR_PICKER_PROP_VALUE);

      out.write("<input type=\"button\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${m:rs('mtp-gem-messages', 'generic.editor.timestamp.TimestampPropertyEditor_Edit.delete')}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
      out.write("\" class=\"gr-btn-02 del-btn\"\n");
      out.write("	onclick=\"deleteItem('");
      out.print(StringUtil.escapeJavaScript(liId));
      out.write('\'');
      out.write(',');
      out.write(' ');
      out.print(toggleAddBtnFunc);
      out.write(")\" />\n");
      out.write("</li>\n");


					}
				}
				String addBtnStyle = "";
				if (array != null && array.length >= pd.getMultiplicity()) addBtnStyle = "display: none;";

      out.write("</ul>\n");
      out.write("<input type=\"button\" id=\"id_addBtn_");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f25 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f25.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f25.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(441,35) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f25.setValue(propName );
      int _jspx_eval_c_005fout_005f25 = _jspx_th_c_005fout_005f25.doStartTag();
      if (_jspx_th_c_005fout_005f25.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f25);
      out.write("\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${m:rs('mtp-gem-messages', 'generic.editor.timestamp.TimestampPropertyEditor_Edit.add')}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
      out.write("\" class=\"gr-btn-02 add-btn\" style=\"");
      out.print(addBtnStyle);
      out.write("\"\n");
      out.write("	onclick=\"addTimestampSelectItem('");
      out.print(StringUtil.escapeJavaScript(ulId));
      out.write('\'');
      out.write(',');
      out.write(' ');
      out.print(pd.getMultiplicity() + 1 );
      out.write(',');
      out.write(' ');
      out.write('\'');
      out.print(StringUtil.escapeJavaScript(dummyRowId));
      out.write("', '");
      out.print(StringUtil.escapeJavaScript(propName));
      out.write("', 'id_count_");
      out.print(StringUtil.escapeJavaScript(propName));
      out.write('\'');
      out.write(',');
      out.write(' ');
      out.print(toggleAddBtnFunc);
      out.write(',');
      out.write(' ');
      out.print(toggleAddBtnFunc);
      out.write(")\" />\n");
      out.write("<input type=\"hidden\" id=\"id_count_");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f26 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f26.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f26.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(443,34) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f26.setValue(propName );
      int _jspx_eval_c_005fout_005f26 = _jspx_th_c_005fout_005f26.doStartTag();
      if (_jspx_th_c_005fout_005f26.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f26);
      out.write("\" value=\"");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f27 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f27.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f27.setParent(null);
      // /jsp/gem/generic/editor/timestamp/TimestampPropertyEditor_Edit.jsp(443,74) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f27.setValue(length );
      int _jspx_eval_c_005fout_005f27 = _jspx_th_c_005fout_005f27.doStartTag();
      if (_jspx_th_c_005fout_005f27.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f27);
      out.write("\" />\n");
      out.write("<script>\n");
      out.write("$(function() {\n");
      out.write("	");
      out.write("\n");
      out.write("	addEditValidator(function() {\n");
      out.write("		var $input = $(\"#\" + es(\"");
      out.print(ulId);
      out.write("\") + \" li :text\");\n");
      out.write("		for (var i = 0; i < $input.length; i++) {\n");
      out.write("			var val = $($input.get(i)).val();\n");
      out.write("			if (typeof val !== \"undefined\" && val != null && val !== \"\") {\n");
      out.write("				try {\n");
      out.write("					validateDate(val, dateUtil.getInputDateFormat(), \"\");\n");
      out.write("				} catch (e) {\n");
      out.write("					alert(messageFormat(scriptContext.gem.locale.common.dateFormatErrorMsg, \"");
      out.print(StringUtil.escapeJavaScript(displayLabel));
      out.write("\", dateUtil.getInputDateFormat()))\n");
      out.write("					return false;\n");
      out.write("				}\n");
      out.write("			}\n");
      out.write("		}\n");
      out.write("		return true;\n");
      out.write("	});\n");
      out.write("});\n");
      out.write("</script>\n");


			}


		} else {
			//単一
			request.setAttribute(Constants.EDITOR_PICKER_PROP_NAME, propName);
			request.setAttribute(Constants.EDITOR_PICKER_PROP_VALUE, propValue);

			if (isUserDateTimePicker) {


      out.write("<span class=\"timestamppicker-field\">\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "TimestampTimepicker.jsp", out, false);
      out.write("</span>\n");

				if (!nestDummyRow) {
					//NestTableダミー行は出力しない＆コピー時はコピー処理側から追加

      out.write("<script>\n");
      out.write("$(function() {\n");
      out.write("	");
      out.write("\n");
      out.write("	addEditValidator(function() {\n");
      out.write("		var $input = $(\"#datetime_\" + es(\"");
      out.print(StringUtil.escapeJavaScript(propName));
      out.write("\"));\n");
      out.write("		var val = $input.val();\n");
      out.write("		var dateFormat = dateUtil.getInputDateFormat();\n");
      out.write("		var timeFormat = $input.attr(\"data-timeformat\");\n");
      out.write("		var fixedmin = $input.attr(\"data-fixedmin\");\n");
      out.write("		var fixedsec = $input.attr(\"data-fixedsec\");\n");
      out.write("		if (typeof val !== \"undefined\" && val !== null && val !== \"\") {\n");
      out.write("			try {\n");
      out.write("				validateTimestampPicker(val, dateFormat, timeFormat, fixedmin, fixedsec);\n");
      out.write("			} catch (e) {\n");
      out.write("				alert(messageFormat(scriptContext.gem.locale.common.timestampFormatErrorMsg, \"");
      out.print(StringUtil.escapeJavaScript(displayLabel));
      out.write("\", dateFormat + \" \" + timeFormat))\n");
      out.write("				return false;\n");
      out.write("			}\n");
      out.write("		}\n");
      out.write("		return true;\n");
      out.write("	});\n");
      out.write("});\n");
      out.write("</script>\n");

				}
			} else {

      out.write("<span class=\"timestampselect-field\">\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "Timestamp.jsp", out, false);
      out.write("</span>\n");

				if (!nestDummyRow) {
					//NestTableダミー行は出力しない＆コピー時はコピー処理側から追加

      out.write("<script>\n");
      out.write("$(function() {\n");
      out.write("	");
      out.write("\n");
      out.write("	addEditValidator(function() {\n");
      out.write("		var val = $(\"#d_\" + es(\"");
      out.print(StringUtil.escapeJavaScript(propName));
      out.write("\")).val();\n");
      out.write("		if (typeof val !== \"undefined\" && val != null && val !== \"\") {\n");
      out.write("			try {\n");
      out.write("				validateDate(val, dateUtil.getInputDateFormat(), \"\");\n");
      out.write("			} catch (e) {\n");
      out.write("				alert(messageFormat(scriptContext.gem.locale.common.dateFormatErrorMsg, \"");
      out.print(StringUtil.escapeJavaScript(displayLabel));
      out.write("\", dateUtil.getInputDateFormat()))\n");
      out.write("				return false;\n");
      out.write("			}\n");
      out.write("		}\n");
      out.write("		return true;\n");
      out.write("	});\n");
      out.write("});\n");
      out.write("</script>\n");

				}
			}
			request.removeAttribute(Constants.EDITOR_PICKER_PROP_NAME);
			request.removeAttribute(Constants.EDITOR_PICKER_PROP_VALUE);
		}
	} else {
		//LABELかHIDDENか更新不可

		if (editor.getDisplayType() != DateTimeDisplayType.HIDDEN) {
			request.setAttribute(Constants.OUTPUT_HIDDEN, true);
		}

      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "TimestampPropertyEditor_View.jsp", out, false);

		if (editor.getDisplayType() != DateTimeDisplayType.HIDDEN) {
			request.removeAttribute(Constants.OUTPUT_HIDDEN);
		}
	}

    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
