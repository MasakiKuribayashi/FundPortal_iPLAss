/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.34
 * Generated at: 2025-02-28 07:43:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.gem.layout;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.*;
import org.iplass.mtp.view.generic.ViewConst;
import org.iplass.mtp.web.template.TemplateUtil;
import org.iplass.gem.command.ViewUtil;
import org.iplass.mtp.util.StringUtil;
import org.iplass.mtp.util.DateUtil;
import org.iplass.mtp.web.template.TemplateUtil;
import org.iplass.gem.command.ViewUtil;
import org.iplass.mtp.util.StringUtil;
import org.iplass.mtp.web.template.TemplateUtil;
import org.iplass.mtp.util.StringUtil;
import org.iplass.gem.GemConfigService;
import org.iplass.mtp.spi.ServiceRegistry;
import java.util.List;
import org.iplass.gem.command.ViewUtil;
import org.iplass.mtp.util.StringUtil;
import org.iplass.mtp.web.template.TemplateUtil;
import org.iplass.gem.command.ViewUtil;
import org.iplass.mtp.tenant.Tenant;
import org.iplass.mtp.tenant.gem.TenantGemInfo;
import org.iplass.mtp.util.StringUtil;
import org.iplass.mtp.web.template.TemplateUtil;

public final class layout_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_0;
private static org.apache.jasper.runtime.ProtectedFunctionMapper _jspx_fnmap_1;

static {
  _jspx_fnmap_0= org.apache.jasper.runtime.ProtectedFunctionMapper.getMapForFunction("m:tcPath", org.iplass.mtp.web.template.ELFunctions.class, "tcPath", new Class[] {});
  _jspx_fnmap_1= org.apache.jasper.runtime.ProtectedFunctionMapper.getMapForFunction("m:rs", org.iplass.mtp.web.template.ELFunctions.class, "rs", new Class[] {java.lang.String.class, java.lang.String.class});
}

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(13);
    _jspx_dependants.put("/jsp/gem/layout/resource/theme.jsp", Long.valueOf(1740642066000L));
    _jspx_dependants.put("/jsp/gem/layout/resource/locale.jsp", Long.valueOf(1740642066000L));
    _jspx_dependants.put("jar:file:/C:/pleiades/2024-12/workspace/Portal_Mock/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Portal_Mock/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar!/META-INF/c.tld", Long.valueOf(1664421078000L));
    _jspx_dependants.put("/jsp/gem/layout/resource/skin.jsp", Long.valueOf(1740642066000L));
    _jspx_dependants.put("/jsp/gem/layout/resource/viewerjsResource.inc.jsp", Long.valueOf(1740642066000L));
    _jspx_dependants.put("/jsp/gem/layout/resource/datepickerResource.inc.jsp", Long.valueOf(1740642066000L));
    _jspx_dependants.put("/jsp/gem/layout/resource/langfont.jsp", Long.valueOf(1740642066000L));
    _jspx_dependants.put("/jsp/gem/layout/resource/baseResource.inc.jsp", Long.valueOf(1740642066000L));
    _jspx_dependants.put("/WEB-INF/mtp.tld", Long.valueOf(1740642050000L));
    _jspx_dependants.put("/WEB-INF/lib/jakarta.servlet.jsp.jstl-3.0.1.jar", Long.valueOf(1737625086258L));
    _jspx_dependants.put("/jsp/gem/layout/resource/resource.jsp", Long.valueOf(1740642066000L));
    _jspx_dependants.put("/jsp/gem/layout/resource/tenant.jsp", Long.valueOf(1740642066000L));
    _jspx_dependants.put("/jsp/gem/layout/resource/coreResource.inc.jsp", Long.valueOf(1740642066000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(14);
    _jspx_imports_classes.add("org.iplass.mtp.view.generic.ViewConst");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("org.iplass.mtp.web.template.TemplateUtil");
    _jspx_imports_classes.add("org.iplass.mtp.spi.ServiceRegistry");
    _jspx_imports_classes.add("org.iplass.mtp.util.DateUtil");
    _jspx_imports_classes.add("org.iplass.gem.command.ViewUtil");
    _jspx_imports_classes.add("org.iplass.gem.GemConfigService");
    _jspx_imports_classes.add("org.iplass.mtp.tenant.gem.TenantGemInfo");
    _jspx_imports_classes.add("org.iplass.mtp.tenant.Tenant");
    _jspx_imports_classes.add("org.iplass.mtp.util.StringUtil");
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPではGET、POST、またはHEADのみが許可されます。 JasperはOPTIONSも許可しています。");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\" />\n");
      out.write("<meta http-equiv=\"x-ua-compatible\" content=\"IE=edge\" />\n");

request.setAttribute(ViewConst.DESIGN_TYPE, ViewConst.DESIGN_TYPE_GEM);

String title = ViewUtil.getDispTenantName();

      out.write("<title>");
      //  c:out
      org.apache.taglibs.standard.tag.rt.core.OutTag _jspx_th_c_005fout_005f0 = (org.apache.taglibs.standard.tag.rt.core.OutTag) _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.OutTag.class);
      _jspx_th_c_005fout_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fout_005f0.setParent(null);
      // /jsp/gem/layout/layout.jsp(38,7) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fout_005f0.setValue( title );
      int _jspx_eval_c_005fout_005f0 = _jspx_th_c_005fout_005f0.doStartTag();
      if (_jspx_th_c_005fout_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return;
      }
      _005fjspx_005ftagPool_005fc_005fout_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005fout_005f0);
      out.write("</title>\n");
      out.write("\n");

	request.setAttribute("staticContentPath", TemplateUtil.getStaticContentPath());
	request.setAttribute("apiVersion", TemplateUtil.getAPIVersion());
	request.setAttribute("skinName", ViewUtil.getSkin().getPageSkinName());
	request.setAttribute("skinImagePath", ViewUtil.getSkinImagePath());
	request.setAttribute("themeName", ViewUtil.getTheme().getThemeName());
	request.setAttribute("themeImagePath", ViewUtil.getThemeImagePath());

	String language = TemplateUtil.getLanguage();
	if (StringUtil.isEmpty(language)) {
		language = "ja";
	}
	request.setAttribute("language", language);

      out.write("<script>\n");
      out.write("contentPath = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\n");
      out.write("contextPath = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${m:tcPath()}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_0));
      out.write("\";\n");
      out.write("sysdate = \"");
      out.print(DateUtil.getSimpleDateFormat("yyyyMMddHHmmss", true).format(TemplateUtil.getCurrentTimestamp()));
      out.write("\";\n");
      out.write("scriptContext = {};\n");
      out.write("document.scriptContext = scriptContext;\n");
      out.write("scriptContext.gem = {};\n");
      out.write("scriptContext.gem.showPulldownPleaseSelectLabel = ");
      out.print(ViewUtil.isShowPulldownPleaseSelectLabel());
      out.write(";\n");
      out.write("dType=\"/gem\";\n");
      out.write("</script>\n");
      out.write("\n");

	String serverDateFormat = TemplateUtil.getLocaleFormat().getServerDateFormat();
	if (StringUtil.isEmpty(serverDateFormat)) {
		serverDateFormat = "yyyyMMdd";
	}

	String serverTimeFormat = TemplateUtil.getLocaleFormat().getServerTimeFormat();
	if (StringUtil.isEmpty(serverTimeFormat)) {
		serverTimeFormat = "HHmmssSSS";
	}

	String outputDateFormat = TemplateUtil.getLocaleFormat().getOutputDateFormat();
	if (StringUtil.isEmpty(outputDateFormat)) {
		outputDateFormat = "yyyy/MM/dd";
	}

	String outputDateWeekdayFormat = TemplateUtil.getLocaleFormat().getOutputDateWeekdayFormat();
	if (StringUtil.isEmpty(outputDateWeekdayFormat)) {
		outputDateWeekdayFormat = "yyyy/MM/dd EEEE";
	}

	String outputTimeHourFormat = TemplateUtil.getLocaleFormat().getOutputTimeHourFormat();
	if (StringUtil.isEmpty(outputTimeHourFormat)) {
		outputTimeHourFormat = "HH";
	}

	String outputTimeMinFormat = TemplateUtil.getLocaleFormat().getOutputTimeMinFormat();
	if (StringUtil.isEmpty(outputTimeMinFormat)) {
		outputTimeMinFormat = "HH:mm";
	}

	String outputTimeSecFormat = TemplateUtil.getLocaleFormat().getOutputTimeSecFormat();
	if (StringUtil.isEmpty(outputTimeSecFormat)) {
		outputTimeSecFormat = "HH:mm:ss";
	}

	String inputDateFormat = TemplateUtil.getLocaleFormat().getBrowserInputDateFormat();
	if (StringUtil.isEmpty(inputDateFormat)) {
		inputDateFormat = "yyyyMMdd";
	}

	String inputTimeHourFormat = TemplateUtil.getLocaleFormat().getBrowserInputTimeHourFormat();
	if (StringUtil.isEmpty(inputTimeHourFormat)) {
		inputTimeHourFormat = "HH";
	}

	String inputTimeMinFormat = TemplateUtil.getLocaleFormat().getBrowserInputTimeMinFormat();
	if (StringUtil.isEmpty(inputTimeMinFormat)) {
		inputTimeMinFormat = "HH:mm";
	}

	String inputTimeSecFormat = TemplateUtil.getLocaleFormat().getBrowserInputTimeSecFormat();
	if (StringUtil.isEmpty(inputTimeSecFormat)) {
		inputTimeSecFormat = "HH:mm:ss";
	}

      out.write("<script>\n");
      out.write("scriptContext.locale = {};\n");
      out.write("scriptContext.locale.defaultLocale = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${language}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\n");
      out.write("scriptContext.locale.serverDateFormat = \"");
      out.print(serverDateFormat);
      out.write("\";\n");
      out.write("scriptContext.locale.serverTimeFormat = \"");
      out.print(serverTimeFormat);
      out.write("\";\n");
      out.write("scriptContext.locale.outputDateFormat = \"");
      out.print(outputDateFormat);
      out.write("\";\n");
      out.write("scriptContext.locale.outputDateWeekdayFormat = \"");
      out.print(outputDateWeekdayFormat);
      out.write("\";\n");
      out.write("scriptContext.locale.outputTimeHourFormat = \"");
      out.print(outputTimeHourFormat);
      out.write("\";\n");
      out.write("scriptContext.locale.outputTimeMinFormat = \"");
      out.print(outputTimeMinFormat);
      out.write("\";\n");
      out.write("scriptContext.locale.outputTimeSecFormat = \"");
      out.print(outputTimeSecFormat);
      out.write("\";\n");
      out.write("scriptContext.locale.inputDateFormat = \"");
      out.print(inputDateFormat);
      out.write("\";\n");
      out.write("scriptContext.locale.inputTimeHourFormat = \"");
      out.print(inputTimeHourFormat);
      out.write("\";\n");
      out.write("scriptContext.locale.inputTimeMinFormat = \"");
      out.print(inputTimeMinFormat);
      out.write("\";\n");
      out.write("scriptContext.locale.inputTimeSecFormat = \"");
      out.print(inputTimeSecFormat);
      out.write("\";\n");
      out.write("</script>\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/gem/i18n/gem-locale.js?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\n");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/gem/i18n/gem-locale-");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${language}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(".js?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\n");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/gem/i18n/gem-locale-migration-");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${language}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(".js?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\n");
      out.write("<script>\n");
      out.write("scriptContext.locale.showPulldownPleaseSelectLabel = ");
      out.print(ViewUtil.isShowPulldownPleaseSelectLabel());
      out.write(";\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/webjars/jquery/3.7.1/jquery.min.js?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\n");
      out.write("<script>$.uiBackCompat = false;</script>\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/webjars/jquery-ui/1.13.3/dist/jquery-ui.min.js?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/gem/functions.js?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/gem/common.js?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/gem/webapi.js?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/gem/plugin/fixHeight.js?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/webjars/moment/2.30.1/min/moment-with-locales.min.js?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/webjars/font-awesome/5.13.1/js/all.min.js?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\n");
      out.write("\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/webjars/jquery-ui/1.13.3/dist/themes/base/jquery-ui.min.css?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n");
      out.write("\n");

	String datepickerOption = ServiceRegistry.getRegistry().getService(GemConfigService.class).getDatePickerDefaultOption();

      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/webjars/jQuery-Timepicker-Addon/1.6.3/jquery-ui-timepicker-addon.js?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/webjars/jQuery-Timepicker-Addon/1.6.3/jquery-ui-sliderAccess.js?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\r\n");
      out.write("\r\n");
      if (_jspx_meth_c_005fif_005f2(_jspx_page_context))
        return;
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/gem/plugin/jQuery-Timepicker-Addon/jquery-ui-timepicker-addon-mtp.js?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\r\n");
      out.write(" \r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/webjars/jQuery-Timepicker-Addon/1.6.3/jquery-ui-timepicker-addon.css?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("\r\n");

	if (datepickerOption != null) {
		//service-config値なのでエスケープしない

      out.write("<script>\r\n");
      out.write("$.datepicker.setDefaults({");
      out.print(datepickerOption);
      out.write("});\r\n");
      out.write("</script>\r\n");

	}

      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/webjars/free-jqgrid/4.15.5/dist/jquery.jqgrid.min.js?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/webjars/free-jqgrid/4.15.5/dist/i18n/min/grid.locale-");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${language}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(".js?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/webjars/jqtree/1.4.9/tree.jquery.js?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\n");
      out.write("\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/webjars/free-jqgrid/4.15.5/dist/css/ui.jqgrid.min.css?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/webjars/free-jqgrid/4.15.5/dist/plugins/css/ui.multiselect.min.css?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/webjars/jqtree/1.4.9/jqtree.css?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n");
      out.write("\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/webjars/viewerjs/1.11.1/dist/viewer.min.css?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/webjars/viewerjs/1.11.1/dist/viewer.min.js?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\n");

	String skinLanguage = (String) request.getAttribute("language");
	String skinName = (String) request.getAttribute("skinName");
	List<String> cssPathList = ViewUtil.getCssPathList(skinName);

      out.write("<script>\n");
      out.write("scriptContext.skinName = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${skinName}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\n");
      out.write("</script>\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/scripts/gem/skin/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${skinName}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/design.js?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"></script>\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/styles/gem/skin/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${skinName}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/base.css?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/styles/gem/skin/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${skinName}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/structure.css?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/styles/gem/skin/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${skinName}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/module.css?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/styles/gem/skin/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${skinName}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/clear.css?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n");
if ("en".equals(skinLanguage)) {
      out.write("<style>\n");
      out.write("#header #user-nav .search-text {\n");
      out.write("height: 26px;\n");
      out.write("}\n");
      out.write("</style>\n");
}
for (String cssPath : cssPathList) {
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.print(cssPath);
      out.write("?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n");
}
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/styles/gem/skin/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${skinName}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/theme/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${themeName}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/color.css?cv=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\n");

	String fontLanguage = (String) request.getAttribute("language");
	String languageFonts = TemplateUtil.getLanguageFonts(fontLanguage);

if (StringUtil.isNotBlank(languageFonts)) {
      out.write("<script>\n");
      out.write("scriptContext.languageFonts = '");
      out.print(languageFonts);
      out.write("';\n");
      out.write("</script>\n");
      out.write("<style>\n");
      out.write("body, input, textarea, .ui-widget,\n");
      out.write(".ui-dialog label, .ui-dialog span, .ui-dialog input, \n");
      out.write(".ui-dialog textarea, .ui-dialog button, .ui-dialog select {\n");
      out.write("font-family: ");
      out.print(languageFonts);
      out.write(";\n");
      out.write("}\n");
      out.write("</style>\n");
}

	Tenant tenant = TemplateUtil.getTenant();
	TenantGemInfo gemInfo = ViewUtil.getTenantGemInfo(tenant);
	String javascriptFilePath = gemInfo.getJavascriptFilePath();
	if (StringUtil.isNotEmpty(javascriptFilePath)) {

      out.write("<script src=\"");
      out.print(TemplateUtil.getResourceContentPath(javascriptFilePath));
      out.write("\"></script>\n");

	}
	String stylesheetFilePath = gemInfo.getStylesheetFilePath();
	if (StringUtil.isNotEmpty(stylesheetFilePath)) {

      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(TemplateUtil.getResourceContentPath(stylesheetFilePath));
      out.write("\" />\n");

	}

	String iconUrl = gemInfo.getIconUrl();
	if (StringUtil.isNotEmpty(iconUrl)) {
		String type = "";
		if (iconUrl.endsWith(".png")) {
			type = "image/png";
		} else if (iconUrl.endsWith(".gif")) {
			type = "image/gif";
		}

      out.write("<link rel=\"icon\" href=\"");
      out.print(TemplateUtil.getResourceContentPath(iconUrl));
      out.write("\" type=\"");
      out.print(type);
      out.write("\" />\n");

	}

      out.write("</head>\n");
      out.write("<body class=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${skinName}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\n");
      out.write("<div id=\"dialog_parent\"></div>\n");
      out.write("\n");
      out.write("<div id=\"container\">\n");
      out.write("\n");

request.setAttribute("showNavi", true);

      if (_jspx_meth_m_005finclude_005f0(_jspx_page_context))
        return;
      out.write("<div id=\"content\">\n");
      if (_jspx_meth_m_005finclude_005f1(_jspx_page_context))
        return;
      out.write("<div id=\"split-block\">\n");
      out.write("<p id=\"split-btn\"></p>\n");
      out.write("</div><!--split-block-->\n");
      out.write("\n");
      out.write("<div id=\"content-inner\">\n");
      out.write("<div id=\"main\">\n");
      out.write("<div id=\"main-inner\">\n");
      if (_jspx_meth_m_005frenderContent_005f0(_jspx_page_context))
        return;
      out.write("</div><!-- main-inner -->\n");
      out.write("</div><!-- main -->\n");
      out.write("</div><!-- content-inner -->\n");
      out.write("</div><!-- content -->\n");
      out.write("\n");
      if (_jspx_meth_m_005finclude_005f2(_jspx_page_context))
        return;

String frameName = "modalFrame-" + Math.random() * 1000 + "-" + new Date().getTime();

      out.write("<div class=\"modal-dialogs\">\n");
      out.write("<div class=\"modal-dialog\" id=\"modal-dialog-root\">\n");
      out.write("<div class=\"modal-wrap\">\n");
      out.write("</div>\n");
      out.write("<div class=\"modal-inner\">\n");
      out.write("<h2 class=\"hgroup-01\"><span id=\"modal-title\"></span></h2>\n");
      out.write("<p class=\"modal-maximize\" id=\"modal-maximize-root\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${m:rs(\"mtp-gem-messages\", \"layout.layout.maximize\")}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_1));
      out.write("</p>\n");
      out.write("<p class=\"modal-restore\" id=\"modal-restore-root\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${m:rs(\"mtp-gem-messages\", \"layout.layout.restore\")}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_1));
      out.write("</p>\n");
      out.write("<p class=\"modal-close\" id=\"modal-close-root\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${m:rs(\"mtp-gem-messages\", \"layout.layout.close\")}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, _jspx_fnmap_1));
      out.write("</p>\n");
      out.write("<iframe name=\"");
      out.print(frameName);
      out.write("\" src=\"about:blank\">\n");
      out.write("</iframe>\n");
      out.write("</div><!--modal-inner-->\n");
      out.write("</div><!--modal-dialog-->\n");
      out.write("</div><!--modal-dialogs-->\n");
      out.write("\n");
      out.write("<div class=\"tooltip-wrap\">\n");
      out.write("<div class=\"tooltip\">\n");
      out.write("<p class=\"tooltxt\"></p>\n");
      out.write("<span class=\"tool-icon\"></span>\n");
      out.write("</div><!--tooltip-->\n");
      out.write("</div><!--tooltip-wrap-->\n");
      out.write("\n");
      out.write("</div><!-- container  -->\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f0.setParent(null);
    // /jsp/gem/layout/resource/locale.jsp(98,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${language != 'en'}", boolean.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
    if (_jspx_eval_c_005fif_005f0 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("<script src=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("/scripts/gem/i18n/gem-locale-en.js?cv=");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\"></script>\n");
        int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
        if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f0.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f1.setParent(null);
    // /jsp/gem/layout/resource/locale.jsp(103,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${language != 'en'}", boolean.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
    if (_jspx_eval_c_005fif_005f1 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("<script src=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("/scripts/gem/i18n/gem-locale-migration-en.js?cv=");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\"></script>\n");
        int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
        if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f1.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f2(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    jakarta.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f2 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    _jspx_th_c_005fif_005f2.setPageContext(_jspx_page_context);
    _jspx_th_c_005fif_005f2.setParent(null);
    // /jsp/gem/layout/resource/datepickerResource.inc.jsp(34,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
    _jspx_th_c_005fif_005f2.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${language != 'en'}", boolean.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
    int _jspx_eval_c_005fif_005f2 = _jspx_th_c_005fif_005f2.doStartTag();
    if (_jspx_eval_c_005fif_005f2 != jakarta.servlet.jsp.tagext.Tag.SKIP_BODY) {
      do {
        out.write("<script src=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("/webjars/jquery-ui/1.13.3/ui/i18n/datepicker-");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${language}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write(".js?cv=");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\"></script>\r\n");
        out.write("<script src=\"");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${staticContentPath}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("/webjars/jQuery-Timepicker-Addon/1.6.3/i18n/jquery-ui-timepicker-");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${language}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write(".js?cv=");
        out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${apiVersion}", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
        out.write("\"></script>\r\n");
        int evalDoAfterBody = _jspx_th_c_005fif_005f2.doAfterBody();
        if (evalDoAfterBody != jakarta.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
          break;
      } while (true);
    }
    if (_jspx_th_c_005fif_005f2.doEndTag() == jakarta.servlet.jsp.tagext.Tag.SKIP_PAGE) {
      return true;
    }
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f2);
    return false;
  }

  private boolean _jspx_meth_m_005finclude_005f0(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    //  m:include
    org.iplass.mtp.web.template.tags.IncludeTag _jspx_th_m_005finclude_005f0 = new org.iplass.mtp.web.template.tags.IncludeTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_m_005finclude_005f0);
    try {
      _jspx_th_m_005finclude_005f0.setJspContext(_jspx_page_context);
      // /jsp/gem/layout/layout.jsp(54,0) name = template type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_m_005finclude_005f0.setTemplate("gem/layout/header");
      _jspx_th_m_005finclude_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_m_005finclude_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_m_005finclude_005f1(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    //  m:include
    org.iplass.mtp.web.template.tags.IncludeTag _jspx_th_m_005finclude_005f1 = new org.iplass.mtp.web.template.tags.IncludeTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_m_005finclude_005f1);
    try {
      _jspx_th_m_005finclude_005f1.setJspContext(_jspx_page_context);
      // /jsp/gem/layout/layout.jsp(57,0) name = template type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_m_005finclude_005f1.setTemplate("gem/layout/navi");
      _jspx_th_m_005finclude_005f1.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_m_005finclude_005f1);
    }
    return false;
  }

  private boolean _jspx_meth_m_005frenderContent_005f0(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    //  m:renderContent
    org.iplass.mtp.web.template.tags.RenderContentTag _jspx_th_m_005frenderContent_005f0 = new org.iplass.mtp.web.template.tags.RenderContentTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_m_005frenderContent_005f0);
    try {
      _jspx_th_m_005frenderContent_005f0.setJspContext(_jspx_page_context);
      _jspx_th_m_005frenderContent_005f0.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_m_005frenderContent_005f0);
    }
    return false;
  }

  private boolean _jspx_meth_m_005finclude_005f2(jakarta.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    jakarta.servlet.jsp.PageContext pageContext = _jspx_page_context;
    //  m:include
    org.iplass.mtp.web.template.tags.IncludeTag _jspx_th_m_005finclude_005f2 = new org.iplass.mtp.web.template.tags.IncludeTag();
    _jsp_getInstanceManager().newInstance(_jspx_th_m_005finclude_005f2);
    try {
      _jspx_th_m_005finclude_005f2.setJspContext(_jspx_page_context);
      // /jsp/gem/layout/layout.jsp(72,0) name = template type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_m_005finclude_005f2.setTemplate("gem/layout/footer");
      _jspx_th_m_005finclude_005f2.doTag();
    } finally {
      _jsp_getInstanceManager().destroyInstance(_jspx_th_m_005finclude_005f2);
    }
    return false;
  }
}
